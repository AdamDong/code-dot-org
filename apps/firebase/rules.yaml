functions:
  - isLoggedIn(): auth.uid !== null
  - prevCount(): "prev.exists() ? 1 : 0"
  - nextCount(): "next.exists() ? 1 : 0"
  - prevTableCount():   "prev.parent().row_count.exists() ? prev.parent().row_count : 0"
  - nextTableCount():   next.parent().row_count
  - isTargetId():       $record_id == next.parent().target_record_id
  - rowCountUpdated():  nextCount() - prevCount() == nextTableCount() - prevTableCount()

schema:
  properties:
    v3:
      properties:
        shared-tables:
          properties:
            tables:
              ~$table_name:
                # RULE: Any modification to a table must modify row_count,
                #       target_record_id, and at least one record.
                # TODO: enforce that at least one record is modified.
                required: ['row_count', 'target_record_id']
                properties:
                  target_record_id:
                    type: string
                  row_count:
                    type: number
                    # RULE: table must not exceed 1000 rows.
                    constraint: next < 1000
                ~$record_id:
                  # $record_id is a string representing the numerical record id.
                  # Its value is a JSON-encoded representation of the record value.
                  # This allows us to compute the record length in security rules.
                  type: string
                  # RULE: Only 1 record can be modified at a time, namely target_record_id.
                  # RULE: When modifying a record, row_count must also be modified.
                  constraint: rowCountUpdated() #&& isTargetId()

access:
  - location: /
    read:  true
    write: true && isLoggedIn()
