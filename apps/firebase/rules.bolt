
isLoggedIn() { auth.uid !== null }

// general helpers

valueOr(value, defaultValue) { value == null ? defaultValue : value }

// Row count helpers

getRecordAsInt(value) { value == null ? 1 : 0 }
prevTableCount(record) { valueOr(prior(record).parent().row_count, 0) }
nextTableCount(record) { record.parent().row_count }
rowCountUpdated() { getRecordAsInt(this) - getRecordAsInt(prior(this)) == nextTableCount(this) - prevTableCount(this) }

isTargetId() { record_id == this.parent().target_record_id }

path / {
  read() { true }
  write() { isLoggedIn() }
}

path /v3/shared-tables/{channel_id}/counters/{table_name} is Number {
  validate() { this == valueOr(prior(this), 0) + 1 }
}

path /v3/shared-tables/{channel_id}/tables/{table_name}/target_record_id is String;

path /v3/shared-tables/{channel_id}/tables/{table_name}/row_count is Number {
  validate() { this < 1000 }
}

// the key $record_id is the id of the record. Its value is the json-encoded
// value of the record.
//path /v3/shared-tables/{channel_id}/tables/{table_name}/{record_id} is String {
//  validate() {  rowCountUpdated() && isTargetId() }
//}
