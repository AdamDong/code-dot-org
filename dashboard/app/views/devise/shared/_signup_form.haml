-#
  This partial contains the contents of the form used for dashboard signup.
  The page including this partial should create the form element itself and
  put this partial inside of it.

- require 'country_codes'

#user_type-block.itemblock
  .labelblock= t('signup_form.user_type_label')
  %select#user_user_age.fieldblock{name: "user[user_type]", type: "select"}
    %option{value: "", selected: true, disabled: true}
    %option{value: User::TYPE_STUDENT}= t('signup_form.user_type_student')
    %option{value: User::TYPE_TEACHER}= t('signup_form.user_type_teacher')
  .error_in_field= t('signup_form.field_is_required')

= f.hidden_field :locale, value: locale
= f.hidden_field :hashed_email

#email-block.itemblock
  .labelblock= t('activerecord.attributes.user.email')
  = f.email_field :email, class: 'input-xlarge fieldblock', maxlength: 255
  .error_in_field

- if f.object.password_required?
  #password-block.itemblock
    .labelblock= t('activerecord.attributes.user.password')
    = f.password_field :password, class: 'input-xlarge fieldblock', maxlength: 255
    .error_in_field

  #password_confirmation-block.itemblock
    .labelblock= t('activerecord.attributes.user.password_confirmation')
    = f.password_field :password_confirmation, class: 'input-xlarge fieldblock', maxlength: 255
    .error_in_field

#name-block.itemblock
  .labelblock= t('activerecord.attributes.user.name')
  = f.text_field :name, class: 'input-xlarge fieldblock', autofocus: true, maxlength: 255
  .error_in_field

#schoolname-block.itemblock{style: "display: none"}
  .labelblock= t('signup_form.school_name')
  = f.text_field :school, class: 'input-xlarge fieldblock', maxlength: 255
  .error_in_field

#age-block.itemblock
  .labelblock= t('signup_form.age')
  %select#user_user_age.fieldblock{name: "user[age]", type: "select"}
    %option{value: "", selected: true, disabled: true}
    - User::AGE_DROPDOWN_OPTIONS.each do |age_option|
      %option{value: age_option}= age_option
  .error_in_field

#gender-block.itemblock
  .labelblock= t('signup_form.gender')
  = f.select :gender, gender_options, {disabled: '', selected: '' }, { class: 'fieldblock'}
  .error_in_field

#schoolcountry-block.itemblock{style: "display: none"}
  .labelblock= t('signup_form.country')
  %select#schoolcountry.form-control.fieldblock{name: "user[country]", type: "select"}
    %option{value: "", selected: true, disabled: true}
    - get_all_countries.each do |country_abbr, country_name|
      %option{value: country_abbr}= country_name
    %option{value: "other"} Other
  .error_in_field

#district-block.itemblock{style: "display: none"}
  .labelblock= t('signup_form.district')
  .district-dropdown
    = render partial: 'shared/district_dropdown', locals: {form_name: "user"}
  .error_in_field

%br/
= f.submit t('signup_form.submit'), class: "btn btn-primary btn-large"
%br/
%br/
%br/
#student-terms!= t('signup_form.student_terms')
#teacher-terms{style: "display: none"}!= t('signup_form.teacher_terms')

.span4
.devise_links
  -#
    TODO: restore this render
    = render "devise/shared/links"

%div{style: "clear:both"}
%br/
%br/
%br/

=javascript_include_tag 'js/signup'

:javascript

  $(document).ready(function() {
    // Send through some values that the JavaScript will need.
    window.signupManager = new SignupManager({
      isTeacher: "#{is_teacher}",
      returnToUrl: "#{return_to_url}",
      teacherDashboardUrl: "#{teacher_dashboard_url}",
      invalidPasswordString: "#{t('signup_form.invalid_password')}",
      passwordMismatchString: "#{t('signup_form.mismatch_password')}"
    });
  });
